{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { theme } from \"./themeActionsTypes\";\nvar initialState = {\n  themeShade: 'light'\n};\n\nvar themeReducer = function themeReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case theme:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          themeShade: action.payload\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default themeReducer;","map":{"version":3,"sources":["/home/ayesha/react-native-demo/react-native/src/store/theme/themeReducer.js"],"names":["theme","initialState","themeShade","themeReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,KAAT;AAEE,IAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE;AADO,CAArB;;AAIA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,KAAL;AAAY;AACV,+CACKI,KADL;AAEEF,UAAAA,UAAU,EAAEG,MAAM,CAACE;AAFrB;AAID;;AACD;AAAS;AACP,eAAOH,KAAP;AACD;AATH;AAWD,CAZD;;AAcA,eAAeD,YAAf","sourcesContent":["import { theme } from \"./themeActionsTypes\";\n  \n  const initialState = {\n    themeShade: 'light',\n  };\n  \n  const themeReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case theme: {\n        return {\n          ...state,\n          themeShade: action.payload,\n        };\n      }\n      default: {\n        return state;\n      }\n    }\n  };\n  \n  export default themeReducer;"]},"metadata":{},"sourceType":"module"}