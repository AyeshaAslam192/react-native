{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/ayesha/react-native-demo/react-native/src/components/common/Smart/themeSwitcher/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport { switchTheme } from \"../../../../store/theme/themeActions\";\nimport { useTheme } from \"../../../../providers/themeProvider\";\nexport default function ThemeSwitcher() {\n  var _useTheme = useTheme(),\n      isDark = _useTheme.isDark;\n\n  var dispatch = useDispatch();\n\n  var _useState = useState(isDark),\n      _useState2 = _slicedToArray(_useState, 2),\n      toggleTheme = _useState2[0],\n      setToggleTheme = _useState2[1];\n\n  useEffect(function () {\n    if (toggleTheme) {\n      dispatch(switchTheme('dark'));\n    } else {\n      dispatch(switchTheme('light'));\n    }\n  }, [toggleTheme]);\n  return React.createElement(Switch, {\n    value: toggleTheme,\n    onValueChange: function onValueChange(newVal) {\n      return setToggleTheme(newVal);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  });\n}","map":{"version":3,"sources":["/home/ayesha/react-native-demo/react-native/src/components/common/Smart/themeSwitcher/index.js"],"names":["React","useState","useEffect","useDispatch","switchTheme","useTheme","ThemeSwitcher","isDark","dispatch","toggleTheme","setToggleTheme","newVal"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,SAASC,WAAT;AACA,SAASC,QAAT;AAEA,eAAe,SAASC,aAAT,GAAyB;AACtC,kBAAmBD,QAAQ,EAA3B;AAAA,MAAQE,MAAR,aAAQA,MAAR;;AACA,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;;AACA,kBAAsCF,QAAQ,CAACM,MAAD,CAA9C;AAAA;AAAA,MAAOE,WAAP;AAAA,MAAoBC,cAApB;;AAEAR,EAAAA,SAAS,CAAC,YAAI;AACZ,QAAGO,WAAH,EAAe;AACbD,MAAAA,QAAQ,CAACJ,WAAW,CAAC,MAAD,CAAZ,CAAR;AACD,KAFD,MAEM;AACJI,MAAAA,QAAQ,CAACJ,WAAW,CAAC,OAAD,CAAZ,CAAR;AACD;AACF,GANQ,EAMN,CAACK,WAAD,CANM,CAAT;AAQA,SACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEA,WAAf;AAA4B,IAAA,aAAa,EAAE,uBAAAE,MAAM;AAAA,aAAID,cAAc,CAACC,MAAD,CAAlB;AAAA,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Switch } from 'react-native';\nimport { switchTheme } from '../../../../store/theme/themeActions';\nimport { useTheme } from '../../../../providers/themeProvider';\n\nexport default function ThemeSwitcher() {\n  const { isDark } = useTheme();\n  const dispatch = useDispatch();\n  const [toggleTheme, setToggleTheme] = useState(isDark);\n\n  useEffect(()=>{\n    if(toggleTheme){\n      dispatch(switchTheme('dark'));\n    } else{\n      dispatch(switchTheme('light'));\n    }\n  }, [toggleTheme])\n  \n  return (\n      <Switch value={toggleTheme} onValueChange={newVal => setToggleTheme(newVal)}/>\n  );\n}"]},"metadata":{},"sourceType":"module"}