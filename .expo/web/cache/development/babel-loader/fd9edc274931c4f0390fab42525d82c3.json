{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport API from \"../API.js\";\n\nvar Login = function (_API) {\n  _inherits(Login, _API);\n\n  var _super = _createSuper(Login);\n\n  function Login() {\n    _classCallCheck(this, Login);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Login, [{\n    key: \"fetchLoginCredentials\",\n    value: function fetchLoginCredentials(data) {}\n  }]);\n\n  return Login;\n}(API);\n\nexport default Login;","map":{"version":3,"sources":["/home/ayesha/react-native-demo/react-native/src/services/shared/Login.js"],"names":["API","Login","data"],"mappings":";;;;;;;;;;AAAA,OAAOA,GAAP;;IAEMC,K;;;;;;;;;;;;;WAEF,+BAAsBC,IAAtB,EAA4B,CAW3B;;;;EAbgBF,G;;AAiBrB,eAAeC,KAAf","sourcesContent":["import API from '../API.js';\n\nclass Login  extends API {\n\n    fetchLoginCredentials(data) {\n        // return new Promise((resolve, reject) => {\n        //   super\n        //     .post('login', data).then((resp) => { \n        //         console.log(resp);\n        //         resolve(resp)\n        //      })\n        //     .catch((error) => \n        //     {console.log(error.response)\n        //         reject(error)});\n        // });\n    }\n  \n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}